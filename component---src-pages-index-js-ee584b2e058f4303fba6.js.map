{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["pageQuery","IndexPage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","nextPage","toString","hasNextPage","totalCount","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel","style","textDecoration"],"mappings":"mHAAA,4JA6EaA,EAAS,aAwCPC,UA3GG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAGhCG,EAAW,GAAkBC,WAC7BC,EAAcT,EAAKE,kBAAkBQ,WAFtB,EAiBrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,SAAU,CAAC,SAAD,2DAC5B,yBAAKC,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACZZ,EAAMa,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAChC,kBAAC,OAAD,CACEQ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,aAEV,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAE/C,2BAAOE,UAAU,qBAAoB,wCAAcE,EAAKE,KAAKC,YAAYM,OAEzE,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CACEJ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,gBAEV,2BAAOA,UAAU,uBAAjB,oBAEF,yBAAKA,UAAU,WAxCT,SAACG,GACnB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACC,EAAKC,GACjBzB,EAAOuB,SAAQ,SAACG,GACVF,IAAQE,EAAMF,KAChBF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,eAIjHT,EAgCQU,CAAYpB,QAKpBP,GACC,yBAAKI,UAAU,oBACb,kBAAC,OAAD,CAAMQ,GAAId,EAAU8B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACrD,0BAAM1B,UAAU,aAAhB","file":"component---src-pages-index-js-ee584b2e058f4303fba6.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  const labels = data.site.siteMetadata.labels\r\n  const currentPage = 1\r\n  const postsPerPage = 3 // see limit in graphql query below\r\n  const nextPage = (currentPage + 1).toString()\r\n  const hasNextPage = data.allMarkdownRemark.totalCount > postsPerPage\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = []\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n        }\r\n      })\r\n    })\r\n    return techTags\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n      <div className=\"index-main\">\r\n        <div className=\"sidebar px-4 py-2\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"post-list-main\">\r\n          {posts.map((post) => {\r\n            const tags = post.node.frontmatter.tags\r\n            return (\r\n              <div key={post.node.id} className=\"container mt-5\">\r\n                <Link\r\n                  to={post.node.fields.slug}\r\n                  className=\"text-dark\"\r\n                >\r\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                </Link>\r\n                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\r\n                </small>\r\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                <Link\r\n                  to={post.node.fields.slug}\r\n                  className=\"text-primary\"\r\n                >\r\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                </Link>\r\n                <div className=\"d-block\">\r\n                  {getTechTags(tags)}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          {hasNextPage &&\r\n            <div className=\"mt-4 text-center\">\r\n              <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\r\n                <span className=\"text-dark\">Next Page â†’</span>\r\n              </Link>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query IndexQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 3\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default IndexPage\r\n\r\n"],"sourceRoot":""}