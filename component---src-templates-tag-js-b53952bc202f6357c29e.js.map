{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["pageQuery","Tag","pageContext","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","console","log","tag","totalCount","tagHeader","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","i","label","push","tech","name","size","color","isOfficeUIIcon","getTechTags"],"mappings":"mHAAA,4JA8FaA,EAAS,aAyCPC,UA5HH,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClBC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OACtCG,QAAQC,IAAIT,EAAYU,KAHW,IAI3BA,EAAQV,EAARU,IACAC,EAAeV,EAAKE,kBAApBQ,WACFC,EAAeD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEMD,EAFN,IAgBf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,MAAM,OAAOC,SAAU,CAAC,SAAD,8DAC5B,yBAAKC,UAAU,cACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,OAGJ,yBAAKA,UAAU,kBACX,2BAAG,wBAAIA,UAAU,WAAWH,IAC3BV,EAAMc,KAAI,SAACC,GACR,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAC9B,kBAAC,OAAD,CACIQ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,aAEV,wBAAIA,UAAU,WAAWE,EAAKE,KAAKC,YAAYP,QAEnD,2BAAOE,UAAU,qBAAjB,aAAgDE,EAAKE,KAAKC,YAAYM,MAEtE,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CACIJ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,gBAEV,2BAAOA,UAAU,uBAAjB,oBAEJ,yBAAKA,UAAU,WAzCvB,SAACG,GACjB,IAAMU,EAAW,GAQjB,OAPAV,EAAKW,SAAQ,SAACnB,EAAKoB,GACfzB,EAAOwB,SAAQ,SAACE,GACRrB,IAAQqB,EAAMrB,KACdkB,EAASI,KAAK,kBAAC,IAAD,CAASX,IAAKS,EAAGpB,IAAKqB,EAAMrB,IAAKuB,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,MAAOL,EAAMK,MAAOC,eAAgBN,EAAMM,wBAIpJT,EAiCsBU,CAAYpB","file":"component---src-templates-tag-js-b53952bc202f6357c29e.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"../pages/index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst Tag = ({ pageContext, data }) => {\r\n    const posts = data.allMarkdownRemark.edges\r\n    const labels = data.site.siteMetadata.labels\r\n    console.log(pageContext.tag)\r\n    const { tag } = pageContext\r\n    const { totalCount } = data.allMarkdownRemark\r\n    const tagHeader = `${totalCount} post${\r\n        totalCount === 1 ? \"\" : \"s\"\r\n        } tagged with \"${tag}\"`\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} isOfficeUIIcon={label.isOfficeUIIcon}/>)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `node.js`, `graphql`]} />\r\n            <div className=\"index-main\">\r\n                <div className=\"sidebar px-4 py-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"post-list-main\">\r\n                    <i><h2 className=\"heading\">{tagHeader}</h2></i>\r\n                    {posts.map((post) => {\r\n                        const tags = post.node.frontmatter.tags\r\n                        return (\r\n                            <div key={post.node.id} className=\"container mt-5\">\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-dark\"\r\n                                >\r\n                                    <h2 className=\"heading\">{post.node.frontmatter.title}</h2>\r\n                                </Link>\r\n                                <small className=\"d-block text-info\">Posted on {post.node.frontmatter.date}\r\n                                </small>\r\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-primary\"\r\n                                >\r\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                                </Link>\r\n                                <div className=\"d-block\">\r\n                                    {getTechTags(tags)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nTag.propTypes = {\r\n    pageContext: PropTypes.shape({\r\n        tag: PropTypes.string.isRequired,\r\n    }),\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            totalCount: PropTypes.number.isRequired,\r\n            edges: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    node: PropTypes.shape({\r\n                        frontmatter: PropTypes.shape({\r\n                            title: PropTypes.string.isRequired,\r\n                        }),\r\n                    }),\r\n                }).isRequired\r\n            ),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n        siteMetadata {\r\n            title \r\n            author\r\n            labels {\r\n                tag\r\n                tech \r\n                name \r\n                size \r\n                color\r\n                isOfficeUIIcon\r\n            } \r\n        }\r\n    } \r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n         node {\r\n            excerpt(pruneLength: 200)\r\n            html\r\n            id\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"MMMM, YYYY\")\r\n                tags\r\n            }\r\n             fields {\r\n                slug\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tag"],"sourceRoot":""}